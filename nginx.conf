server {
    listen 80;
    server_name localhost;  # Для локальной разработки используем localhost

    root /usr/share/nginx/html;
    index index.html;

    location / {
        proxy_pass http://app:3001/;  # Прокси запросы на локальный сервис app

        # Добавляем настройки для поддержки WebSocket
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
    }

        # Проксирование WebSocket соединений на /ws
    location /ws {
        proxy_pass http://bot:3002;  # Проксирование на ваш бэкенд-сервер

        # Настройки для поддержки WebSocket
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";

        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # Проксирование всех запросов на bot напрямую
    location /send-forms {
        proxy_pass http://bot:3002/;  # Проксирование запросов на сервис bot

        # Добавляем настройки для поддержки WebSocket
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Заголовки CORS
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept';
    }
}
